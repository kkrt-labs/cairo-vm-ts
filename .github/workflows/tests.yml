name: tests

on:
  pull_request:
    branches:
      - '*'

permissions:
  deployments: read
  contents: read
  pull-requests: write

jobs:
  test:
    name: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Initialize and update submodules
        run: git submodule update --init --recursive

      - name: Load cached Poetry installation
        id: cached-poetry
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: poetry-${{ steps.setup-python.outputs.python-version }}

      - name: Install Poetry
        if: steps.cached-poetry.outputs.cache-hit != 'true'
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key:
            venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version
            }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Configure Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust dependencies
        id: cached-cairo-compiler-dependencies
        uses: actions/cache@v3
        with:
          path: |
            cairo/.cargo/bin
            cairo/.cargo/registry/index
            cairo/.cargo/registry/cache
            cairo/.cargo/git/db
            cairo/target
            cairo/corelib
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build Cairo compiler
        if: steps.cached-cairo-compiler-dependencies.outputs.cache-hit != 'true'
        run: make build-cairo

      - name: Compile cairo files
        run: make compile

      - name: Install bun
        uses: oven-sh/setup-bun@v1

      - name: Run tests
        run: bun install && bun test

      - name: Run all Cairo Zero & Cairo programs
        run: make run-all
