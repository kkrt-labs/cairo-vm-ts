name: tests

on:
  pull_request:
    branches:
      - '*'

permissions:
  deployments: read
  contents: read
  pull-requests: write

jobs:
  test:
    name: test
    runs-on: ubuntu-latest
    steps:
      #----------------------------------------------
      #        check-out repo and set-up python
      #----------------------------------------------
      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      #----------------------------------------------
      #          install & configure poetry
      #----------------------------------------------
      - name: Load cached Poetry installation
        id: cached-poetry
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: poetry-0
      - name: Install Poetry
        if: steps.cached-poetry.outputs.cache-hit != 'true'
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - run: poetry config
      #----------------------------------------------
      #      load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key:
            venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version
            }}-${{ hashFiles('**/poetry.lock') }}
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      #----------------------------------------------
      #             compile Cairo files
      #----------------------------------------------
      - name: Compile cairo files
        run: make compile
      #----------------------------------------------
      #             install Bun runtime
      #----------------------------------------------
      - name: Install bun
        uses: oven-sh/setup-bun@v1
      #----------------------------------------------
      #    install dependencies & run test suite
      #----------------------------------------------
      - name: Run tests
        run: bun install && bun test
